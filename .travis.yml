# force use of container based worker
sudo: false
os: linux
git:
  depth: 1
  submodules: false

language: cpp
compiler: clang
# osx_image: xcode6.4
env:
  global:
    secure: "eAYRz+/sI/fxA3AODrMkBqBqoHf/SX2+F4UjQzUFrt7bvFAoV6EbjUeTMe5Df9VvY0KL196HTJxunbPsUDJLPwNVWerBM/39Fs1LcnlOl58RuK9+a8wNJNVWFkwA9efsa6akpYmYI2GLmUAb/vHW4OuBTHTzpoLnthckIlDgYpo="

addons:
  apt:
    packages: &std_packages
    - expect 
    - gfortran
    - cmake
    - libtbb-dev
    - libopenmpi-dev
    - libglpk-dev
    - libxml2-dev
    - bison
    - flex
    - doxygen
    - imagemagick
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.5
    packages:
    - *std_packages
    - clang-3.5

matrix:
  include:
   - env: BUILD="llvm-3.5-debug" COMPILER_VERSION="clang-3.5" FEELPP_STD_CPP=11 FEELPP_CXX=clang++-3.5 FEELPP_CC=clang-3.5 BUILDTYPE=Debug TARGET=quickstart
     addons: &clang35
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5
          packages:
            - *std_packages
            - clang-3.5
   - env: BUILD="llvm-3.6" COMPILER_VERSION="clang-3.6" FEELPP_STD_CPP=11 FEELPP_CXX=clang++-3.6 FEELPP_CC=clang-3.6 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
     addons: &clang36
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - *std_packages
            - clang-3.6
   - env: BUILD="llvm-3.6-stdc++14" COMPILER_VERSION="clang-3.6" FEELPP_STD_CPP=14 FEELPP_CXX=clang++-3.6 FEELPP_CC=clang-3.6 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
     addons: &clang36
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - *std_packages
            - clang-3.6
   - env: BUILD="llvm-3.8" COMPILER_VERSION="clang-3.8" FEELPP_STD_CPP=11 FEELPP_CXX=clang++-3.8 FEELPP_CC=clang-3.8 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
     addons: &clang38
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise
          packages:
            - *std_packages
            - clang-3.8
   - env: BUILD="llvm-3.8-stdc++14" COMPILER_VERSION="clang-3.8" FEELPP_STD_CPP=14 FEELPP_CXX=clang++-3.8 FEELPP_CC=clang-3.8 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
     addons: &clang38
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise
          packages:
            - *std_packages
            - clang-3.8
   - env: BUILD="gcc-5" COMPILER_VERSION="g++-5" FEELPP_STD_CPP=11 FEELPP_CXX=g++-5 FEELPP_CC=gcc-5 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O0 -DNDEBUG"
     addons: &gcc5
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *std_packages
            - g++-5
  allow_failures:
  - os: osx
  - env: BUILD="gcc-5" COMPILER_VERSION="g++-5" FEELPP_STD_CPP=11 FEELPP_CXX=g++-5 FEELPP_CC=gcc-5 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O0 -DNDEBUG"

before_install:
  - echo $TRAVIS_OS_NAME
  - echo $HOME
  - if test "x$TRAVIS_OS_NAME" = "xlinux"; then apt-cache search clang; fi
  - if test "x$TRAVIS_OS_NAME" = "xlinux"; then
      if test "x$FEELPP_CC" != "x"; then
        export CC=$FEELPP_CC;
        export CXX=$FEELPP_CXX;
      else
        export CC=clang-3.5;
        export CXX=clang++-3.5;
        export FEELPP_STD_CPP=11;
      fi;
    fi
 # - if test "x$TRAVIS_OS_NAME" = "xosx"; then cd /usr/local && git remote add feelpp https://github.com/feelpp/homebrew.git && git pull feelpp master; fi
 # - if test "x$TRAVIS_OS_NAME" = "xosx"; then brew tap feelpp/science; fi
  - if test "x$TRAVIS_OS_NAME" = "xosx"; then brew update; fi
  - if test "x$TRAVIS_OS_NAME" = "xosx"; then brew outdated xctool || brew upgrade xctool; fi
  - if test "x$TRAVIS_OS_NAME" = "xosx"; then brew install open-mpi; fi
#  - if test "x$TRAVIS_OS_NAME" = "xosx"; then brew tap homebrew/science; fi
  #- if test "x$TRAVIS_OS_NAME" = "xosx"; then brew install --only-dependencies feelpp; fi
  #install some submodules
  - git submodule update --init --recursive contrib/nlopt
  #- git submodule update --init --recursive contrib/nt2
  - git submodule update --init --recursive contrib/ipopt
  - git submodule update --init --recursive quickstart
  - export NPROCS=3
  - bash ports/travis/boost.sh; export BOOSTROOT=$HOME/software/install/boost; echo $BOOSTROOT
  - bash ports/travis/gmsh.sh; export GMSH_DIR=$HOME/software/install/gmsh-2.9.3; echo $GMSH_DIR
  - bash ports/travis/petsc.sh; export PETSC_DIR=$HOME/software/install/petsc-3.6.0; echo $PETSC_DIR
  - bash ports/travis/cln.sh; export CLN_DIR=$HOME/software/install/cln; echo $CLN_DIR

install:
- $CXX --version
- $CC --version
- mkdir opt-$BUILD && cd opt-$BUILD && ../configure --build=$BUILDTYPE -v --cxxflags="$CXXFLAGS" --std=c++$FEELPP_STD_CPP --prefix=$HOME/software/install/feelpp


script:
- make -j16 feelpp_ginac
- make -j1 feelpp
- if ! test "x$TARGET" = "x"; then make $TARGET-check; fi

after_success:
- make install
- cd $HOME/software/install &&  tar cjf feelpp-ubuntu-precise-latest.tar.bz2 .
- rm batch; touch batch
- export SSHPASS=$SSH_PASS
- echo "#!/usr/bin/expect" > batch
- echo "spawn sftp travis@46.101.232.162" >> batch
- echo "expect \"The authenticity of host '46.101.232.162 (46.101.232.162)' can't be established.\n\"" >> batch
- echo "expect \"ECDSA key fingerprint is ac:0c:58:65:10:dd:c8:33:5d:81:ec:d5:32:d4:fd:89.\n\"" >> batch
- echo "expect \"Are you sure you want to continue connecting (yes/no)?\n\"" >> batch
- echo "send \"yes\n\"" >> batch
- echo "expect \"password:\"" >> batch
- echo "send \"$SSHPASS\n\"" >> batch
- echo "expect \"sftp>\"" >> batch
- echo "send \"put feelpp-ubuntu-precise-latest.tar.bz2 writeable/feelpp-ubuntu-precise-latest.tar.bz2\n\"" >> batch
- echo "expect \"sftp>\"" >> batch
- echo "send \"exit\n\"" >> batch
- echo "interact" >> batch
- chmod +x batch; ./batch

branches:
  only:
  - develop
  - master
  - travis

cache:
  directories:
  - $HOME/software

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/cf3f3fee0056f865adb2
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
